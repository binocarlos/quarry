#!/usr/bin/env bash
set -eo pipefail; [[ $QUARRY_TRACE ]] && set -x

case "$1" in

  build)
    STACK="$2";
    STACK_DIR="$QUARRY_ROOT/$STACK";

    # reset the build folders
    rm -rf $STACK_DIR/buildtemp && mkdir -p $STACK_DIR/buildtemp
    rm -rf $STACK_DIR/build
    rm -rf $STACK_DIR/src && mkdir -p $STACK_DIR/src

    # incoming tar stream -> /home/quarry/appname/src.tar
    cat > $STACK_DIR/src.tar
    cat $STACK_DIR/src.tar | tar -xC $STACK_DIR/src

    quarry build:folder $STACK
    ;;

  build:folder)
    STACK="$2";
    STACK_DIR="$QUARRY_ROOT/$STACK";
    # compile the stack into a build folder
    buildid=$(docker run -d -v $STACK_DIR/buildtemp:/build -v $STACK_DIR/src:/src quarry/base quarry-cli build $STACK /src /build)
    test $(docker wait $buildid) -eq 0

    # copy the root owned build folder to a quarry owned one
    cp -r $STACK_DIR/buildtemp $STACK_DIR/build
    docker run -i -v $STACK_DIR/buildtemp:/build quarry/base bash -c "rm -rf /build/*"
    rm -rf $STACK_DIR/buildtemp

    # loop over the services and build them
    for servicefolder in $STACK_DIR/build/service/* ; do
      servicename=$(echo $servicefolder | awk -F/ '{print $(NF)}')
      containername=$(cat $servicefolder/container)

      echo "    -----> Service $servicename - $containername ..."
      quarry build:node $servicefolder

    done

    # loop over the workers and build them
    for workerfolder in $STACK_DIR/build/worker/* ; do
      workername=$(echo $workerfolder | awk -F/ '{print $(NF)}')
      containername=$(cat $workerfolder/container)

      echo "    -----> Worker $workername - $containername ..."
      quarry build:node $workerfolder
      
    done
    ;;

  build:node)
    NODEFOLDER="$2";
    # build the service container
    if [[ -f "$NODEFOLDER/build/Dockerfile" ]]; then
      # we build the docker file into a local image
      containername=$(cat $NODEFOLDER/container)
      reponame="$QUARRY_MASTER:5000/$containername"
      echo "building $containername"
      docker build -t $reponame $NODEFOLDER/build
      # now commit the image to the master registry
      echo "pushing $reponame"
      docker push $reponame 1>&2
      # write the image name (which is pointing to the registry)
      echo $reponame > $NODEFOLDER/container
    fi
    ;;


  help)
    cat
    ;;

esac
