#!/usr/bin/env bash
set -eo pipefail
DOCKERIP=$(ifconfig docker0 | grep "inet addr" | sed 's/inet addr://' | awk '{ print $1 }' || "127.0.0.1")
export QUARRY_ROOT=${QUARRY_ROOT:="/home/quarry"}
export QUARRY_DATA_ROOT=${QUARRY_DATA_ROOT:="/var/lib/quarry/data"}
export PLUGIN_PATH=${PLUGIN_PATH:="/var/lib/quarry/plugins"}
export QUARRY_HOST=${QUARRY_HOST:=$DOCKERIP}
export QUARRY_MASTER=${QUARRY_MASTER:=$QUARRY_HOST}

[[ -f $QUARRY_ROOT/quarryrc ]] && source $QUARRY_ROOT/quarryrc

[[ $QUARRY_TRACE ]] && set -x

if [[ $(id -un) != "quarry" && $1 != "plugins-install" ]]; then
  sudo -u quarry -H $0 "$@"
  exit
fi

case "$1" in
  receive)
    STACK="$2";
    echo "-----> Cleaning up ..."
    quarry cleanup
    echo "-----> Building $STACK ..."
    cat | quarry build $STACK
    echo "-----> Deploying $STACK ..."
    quarry deploy $STACK
    ;;

  host)
    echo $QUARRY_HOST
    ;;

  cleanup)
    # delete all non-running container
    docker ps -a | grep 'Exit' |  awk '{print $1}' | xargs docker rm &> /dev/null &
    # delete unused images
    docker images | grep '<none>' |  awk '{print $3}'  | xargs docker rmi &> /dev/null &
    ;;

  plugins)
    ls -1 -d $PLUGIN_PATH/*/
    ;;

  plugins-install)
    pluginhook install
    ;;

  help)
    echo
    cat<<EOF | pluginhook commands help | sort
    help                                         Print the list of commands
    plugins                                      Print active plugins
    plugins-install                              Install active plugins
EOF
    echo
    ;;

  *)
    for script in $(ls -d /var/lib/quarry/plugins/*/commands); do
      $script "$@"
    done
    ;;

esac
